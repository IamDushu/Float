// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: visit.sql

package db

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createVisit = `-- name: CreateVisit :one
INSERT INTO visits (
  visit_id,
  nurse_id,
  patient_id,
  scheduled_at, 
  completed_at, 
  status, 
  notes
) VALUES (
   $1, $2, $3, $4, $5, $6, $7
) RETURNING visit_id, nurse_id, patient_id, scheduled_at, completed_at, status, notes, created_at
`

type CreateVisitParams struct {
	VisitID     uuid.UUID     `json:"visit_id"`
	NurseID     uuid.NullUUID `json:"nurse_id"`
	PatientID   uuid.UUID     `json:"patient_id"`
	ScheduledAt time.Time     `json:"scheduled_at"`
	CompletedAt time.Time     `json:"completed_at"`
	Status      string        `json:"status"`
	Notes       string        `json:"notes"`
}

func (q *Queries) CreateVisit(ctx context.Context, arg CreateVisitParams) (Visit, error) {
	row := q.db.QueryRowContext(ctx, createVisit,
		arg.VisitID,
		arg.NurseID,
		arg.PatientID,
		arg.ScheduledAt,
		arg.CompletedAt,
		arg.Status,
		arg.Notes,
	)
	var i Visit
	err := row.Scan(
		&i.VisitID,
		&i.NurseID,
		&i.PatientID,
		&i.ScheduledAt,
		&i.CompletedAt,
		&i.Status,
		&i.Notes,
		&i.CreatedAt,
	)
	return i, err
}
